This patch is the collective application of the following 3
upstream git commits for the v3.0.x branch.

d8f91f97 Missed PAD macro
4203125 Proper fix for calculating encoded session-key length
e96eeea Increase size of LEAP session key buffer
457beab Sanity checks for leap

These are fixes for the following bugs:
1031061 1031052

diff -r -u freeradius-server-3.0.0.pre-patch/src/include/libradius.h freeradius-server-3.0.0/src/include/libradius.h
--- freeradius-server-3.0.0.pre-patch/src/include/libradius.h	2013-11-26 12:33:38.894517298 -0500
+++ freeradius-server-3.0.0/src/include/libradius.h	2013-11-26 13:22:48.215581799 -0500
@@ -103,6 +103,8 @@
 #define TAG_ANY			-128	/* minimum signed char */
 #define TAG_UNUSED		0

+#define PAD(_x, _y)		(_y - ((_x) % _y))
+
 #if defined(__GNUC__)
 # define PRINTF_LIKE(n) __attribute__ ((format(printf, n, n+1)))
 # define NEVER_RETURNS __attribute__ ((noreturn))
@@ -424,6 +426,8 @@
 			     uint8_t const *vector);
 int		rad_pwdecode(char *encpw, size_t len, char const *secret,
 			     uint8_t const *vector);
+
+#define	FR_TUNNEL_PW_ENC_LENGTH(_x) (2 + 1 + _x + PAD(_x + 1, 16))
 int		rad_tunnel_pwencode(char *encpw, size_t *len, char const *secret,
 				    uint8_t const *vector);
 int		rad_tunnel_pwdecode(uint8_t *encpw, size_t *len,
diff -r -u freeradius-server-3.0.0.pre-patch/src/modules/rlm_eap/types/rlm_eap_leap/eap_leap.c freeradius-server-3.0.0/src/modules/rlm_eap/types/rlm_eap_leap/eap_leap.c
--- freeradius-server-3.0.0.pre-patch/src/modules/rlm_eap/types/rlm_eap_leap/eap_leap.c	2013-11-26 12:33:38.645517611 -0500
+++ freeradius-server-3.0.0/src/modules/rlm_eap/types/rlm_eap_leap/eap_leap.c	2013-11-26 13:22:44.218580815 -0500
@@ -324,7 +324,7 @@
 	 */
 	fr_md5_calc(hash, buffer, 16 + 8 + 24 + 8 + 24);

-	q = talloc_array(vp, char, 16 + sizeof("leap:session-key="));
+	q = talloc_array(vp, char, FR_TUNNEL_PW_ENC_LENGTH(16) + sizeof("leap:session-key="));
 	strcpy(q, "leap:session-key=");

 	memcpy(q + 17, hash, 16);
@@ -395,6 +395,9 @@
 {
 	leap_packet_raw_t *data;

+	rad_assert(eap_ds->request);
+	rad_assert(reply);
+
 	/*
 	 *  We need the name and the challenge.
 	 */
diff -r -u freeradius-server-3.0.0.pre-patch/src/modules/rlm_eap/types/rlm_eap_leap/eap_leap.h freeradius-server-3.0.0/src/modules/rlm_eap/types/rlm_eap_leap/eap_leap.h
--- freeradius-server-3.0.0.pre-patch/src/modules/rlm_eap/types/rlm_eap_leap/eap_leap.h	2013-11-26 12:33:38.645517611 -0500
+++ freeradius-server-3.0.0/src/modules/rlm_eap/types/rlm_eap_leap/eap_leap.h	2013-11-26 13:22:36.311578784 -0500
@@ -41,10 +41,10 @@
 typedef struct leap_packet {
 	unsigned char	code;
 	unsigned char	id;
-	int		length;
+	size_t		length;
 	int		count;
 	unsigned char	*challenge;
-	int		name_len;
+	size_t		name_len;
 	char		*name;
 } leap_packet_t;

diff -r -u freeradius-server-3.0.0.pre-patch/src/modules/rlm_eap/types/rlm_eap_leap/rlm_eap_leap.c freeradius-server-3.0.0/src/modules/rlm_eap/types/rlm_eap_leap/rlm_eap_leap.c
--- freeradius-server-3.0.0.pre-patch/src/modules/rlm_eap/types/rlm_eap_leap/rlm_eap_leap.c	2013-11-26 12:33:38.645517611 -0500
+++ freeradius-server-3.0.0/src/modules/rlm_eap/types/rlm_eap_leap/rlm_eap_leap.c	2013-11-26 13:22:36.312578784 -0500
@@ -96,11 +96,13 @@
 	leap_packet_t	*reply;
 	VALUE_PAIR	*password;

+	rad_assert(request);
+
 	if (!handler->opaque) {
 		REDEBUG("Cannot authenticate without LEAP history");
 		return 0;
 	}
-	session = (leap_session_t *) handler->opaque;
+	session = talloc_get_type_abort(handler->opaque, leap_session_t);
 	reply = NULL;

 	/*
